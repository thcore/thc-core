# .github/workflows/firebase-hosting-pull-request.yml
# Pull Request가 열릴 때, Firebase Hosting에 임시 미리보기 채널로 배포

name: Deploy to Firebase Hosting on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build_and_preview:
    # PR이 포크(Fork)가 아닌, 동일 저장소 내 브랜치에서 만든 경우만 동작
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      # 1) 리포지토리 체크아웃
      - name: Check out repository
        uses: actions/checkout@v4

      # 2) .env.local 생성 (GitHub Secrets -> 환경 변수 주입)
      - name: Create .env.local
        run: |
          cat << EOF > .env.local
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          EOF

      # 3) 의존성 설치 후 빌드
      - run: npm ci && npm run build

      # 4) Firebase Hosting 미리보기 채널에 배포 (Pull Request용)
      - name: Deploy to Firebase Preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_THC_NEXUS_DEV }}
          projectId: thc-nexus-dev
